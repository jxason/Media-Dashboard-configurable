@page
@model DashboardModel
@{
    ViewData["Title"] = "Dashboard Finanzas Taxista";
}

<!-- ===========================
  - Aquí traemos Bootstrap (estructura y utilidades),
    Google Fonts (tipografía pro), AOS (animaciones sutiles),
    Bootstrap Icons (iconografía liviana).
=========================== -->
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="dns-prefetch" href="https://fonts.googleapis.com">
<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap" rel="stylesheet">

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" />
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
<link rel="stylesheet" href="https://unpkg.com/aos@2.3.4/dist/aos.css" />

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://unpkg.com/aos@2.3.4/dist/aos.js"></script>

<!-- ===========================
  - Definimos una paleta profesional con variables CSS,
    sombras suaves, tarjetas con microinteracciones (hover),
    y el tamaño fijo de las gráficas.
=========================== -->
<link rel="stylesheet" href="~/css/DashBoard.css" asp-append-version="true" />




<div class="container py-4">

	
    <!-- ===========================
      - Presentamos el dashboard con un hero cálido:
        icono, título y una pequeña descripción.
    =========================== -->
    <div class="hero p-4 mb-4" data-aos="fade-down">
        <div class="d-flex align-items-center gap-3">
            <div class="icon-wrap" style="background:rgba(34,197,94,.1); border:1px solid rgba(34,197,94,.2);">
                <i class="bi bi-taxi-front" style="font-size:1.25rem;color:var(--accent)"></i>
            </div>
            <div>
                <h2 class="mb-0">@ViewData["Title"]</h2>
                <div class="muted">Controla tus ingresos, gastos y productividad de un vistazo.</div>
            </div>
            <div class="ms-auto d-none d-md-block">
                <span class="badge rounded-pill badge-soft">Último mes</span>
            </div>
        </div>
    </div>

    <!-- ===========================
      - Nuestros indicadores brillan con íconos y
        micro-interacciones, responsivos 4x por fila.
    =========================== -->
    <div class="row g-3 mb-4">
        <div class="col-md-3 col-6" data-aos="fade-up" data-aos-delay="0">
            <div class="card kpi p-3 text-center">
                <div class="d-flex align-items-center justify-content-center gap-3">
                    <div class="icon-wrap"><i class="bi bi-wallet2" style="font-size:1.1rem;color:var(--primary)"></i></div>
                    <div class="text-start">
                        <div class="muted">Saldo Actual</div>
                        <h4 class="mb-0">$@Model.DashboardData.Resumen.SaldoActual</h4>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3 col-6" data-aos="fade-up" data-aos-delay="50">
            <div class="card kpi p-3 text-center">
                <div class="d-flex align-items-center justify-content-center gap-3">
                    <div class="icon-wrap"><i class="bi bi-geo-alt" style="font-size:1.1rem;color:var(--primary)"></i></div>
                    <div class="text-start">
                        <div class="muted">Total Viajes</div>
                        <h4 class="mb-0">@Model.DashboardData.Resumen.TotalViajes</h4>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3 col-6" data-aos="fade-up" data-aos-delay="100">
            <div class="card kpi p-3 text-center">
                <div class="d-flex align-items-center justify-content-center gap-3">
                    <div class="icon-wrap" style="background:rgba(239,68,68,.08);border-color:rgba(239,68,68,.2)"><i class="bi bi-cash-coin" style="font-size:1.1rem;color:var(--danger)"></i></div>
                    <div class="text-start">
                        <div class="muted">Total Gastos</div>
                        <h4 class="mb-0 text-danger">$@Model.DashboardData.Resumen.TotalGastos</h4>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3 col-6" data-aos="fade-up" data-aos-delay="150">
            <div class="card kpi p-3 text-center">
                <div class="d-flex align-items-center justify-content-center gap-3">
                    <div class="icon-wrap"><i class="bi bi-calendar-check" style="font-size:1.1rem;color:var(--primary)"></i></div>
                    <div class="text-start">
                        <div class="muted">Días Trabajados</div>
                        <h4 class="mb-0">@Model.DashboardData.Resumen.DiasTrabajados</h4>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- ===========================
      - Un card protagonista, centrado, con la gráfica
        de 320x200 y etiqueta superior.
    =========================== -->
    <div class="card mb-4 p-3 text-center" data-aos="zoom-in">
        <div class="d-flex align-items-center justify-content-between mb-2 px-1">
            <strong>Historial del último mes</strong>
            <span class="badge rounded-pill badge-soft">Ingresos vs Gastos</span>
        </div>
        <div class="chart-fixed">
            <canvas id="historialChart" width="320" height="200"></canvas>
        </div>
    </div>

    <!-- ===========================
      - Dos cartas hermanas: ingresos y gastos por categoría,
        cada una con su pastel pequeño y elegante.
    =========================== -->
    <div class="row g-3 mb-4">
        <div class="col-md-6" data-aos="fade-right">
            <div class="card p-3 text-center">
                <div class="d-flex align-items-center justify-content-between mb-2 px-1">
                    <strong>Ingresos por Categoría</strong>
                    <i class="bi bi-graph-up-arrow muted"></i>
                </div>
                <div class="chart-fixed">
                    <canvas id="ingresosPie" width="320" height="200"></canvas>
                </div>
            </div>
        </div>
        <div class="col-md-6" data-aos="fade-left">
            <div class="card p-3 text-center">
                <div class="d-flex align-items-center justify-content-between mb-2 px-1">
                    <strong>Gastos por Categoría</strong>
                    <i class="bi bi-graph-down-arrow muted"></i>
                </div>
                <div class="chart-fixed">
                    <canvas id="gastosPie" width="320" height="200"></canvas>
                </div>
            </div>
        </div>
    </div>

    <!-- ===========================
      - Dos tablas limpias, con headers claros y
        acentos sutiles para montos.
    =========================== -->
    <div class="row g-3">
        <div class="col-md-6" data-aos="fade-up">
            <div class="card p-3">
                <div class="d-flex align-items-center justify-content-between mb-2 px-1">
                    <strong>Últimos Viajes</strong>
                    <i class="bi bi-sign-turn-right muted"></i>
                </div>
                <table class="table table-striped table-sm">
                    <thead class="table-light">
                        <tr>
                            <th>Fecha</th>
                            <th>Ubicación</th>
                            <th class="text-end">Monto</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var viaje in Model.DashboardData.UltimosRegistros.UltimosViajes)
                        {
                            <tr>
                                <td>@viaje.Fecha.ToString("dd/MM/yyyy")</td>
                                <td>@viaje.Ubicacion</td>
                                <td class="text-end">$@viaje.Monto</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

        <div class="col-md-6" data-aos="fade-up" data-aos-delay="100">
            <div class="card p-3">
                <div class="d-flex align-items-center justify-content-between mb-2 px-1">
                    <strong>Últimos Gastos</strong>
                    <i class="bi bi-receipt muted"></i>
                </div>
                <table class="table table-striped table-sm">
                    <thead class="table-light">
                        <tr>
                            <th>Fecha</th>
                            <th>Categoría</th>
                            <th class="text-end">Monto</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var gasto in Model.DashboardData.UltimosRegistros.UltimosGastos)
                        {
                            <tr>
                                <td>@gasto.Fecha.ToString("dd/MM/yyyy")</td>
                                <td>@gasto.Categoria</td>
                                <td class="text-end text-danger">$@gasto.Monto</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    
    <div class="text-center mt-4 footer-note" data-aos="fade-in">
        Consejo: mantén la consistencia de categorías y registra a diario; los datos te contarán mejores historias.
    </div>
</div>




<!-- ===========================
  - Inicializamos AOS para animaciones suaves.
  - Definimos los datasets con Razor.
  - Creamos 3 gráficos con tamaño fijo y responsive desactivado.
=========================== -->
<script>
    // AOS: micro-animaciones al hacer scroll, estilo “presentación elegante”
    AOS.init({
        duration: 600,
        once: true,
        easing: 'ease-out-cubic'
    });

    // ===== Datos historial (línea) =====
    const historialLabels = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(
        Model.DashboardData.HistorialMes.Select(h => h.Fecha.ToString("dd/MM"))
    ));
    const ingresosData = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(
        Model.DashboardData.HistorialMes.Select(h => h.Ingresos)
    ));
    const gastosData = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(
        Model.DashboardData.HistorialMes.Select(h => h.Gastos)
    ));

    new Chart(document.getElementById('historialChart'), {
        type: 'line',
        data: {
            labels: historialLabels,
            datasets: [
                { label: 'Ingresos', data: ingresosData, borderColor: '#22c55e', tension: .25, fill: false },
                { label: 'Gastos', data: gastosData, borderColor: '#ef4444', tension: .25, fill: false }
            ]
        },
        options: {
            responsive: false,
            maintainAspectRatio: false,
            plugins: {
                legend: { display: true, labels: { boxWidth: 12 } },
                tooltip: { mode: 'index', intersect: false }
            },
            scales: {
                x: { grid: { display:false } },
                y: { grid: { color: 'rgba(0,0,0,.05)' } }
            }
        }
    });

    // ===== Ingresos por categoría (pie) =====
    const ingresosCategorias = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(
        Model.DashboardData.Categorias.IngresosPorCategoria.Select(c => c.Categoria)
    ));
    const ingresosMontos = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(
        Model.DashboardData.Categorias.IngresosPorCategoria.Select(c => c.Monto)
    ));
    new Chart(document.getElementById('ingresosPie'), {
        type: 'pie',
        data: {
            labels: ingresosCategorias,
            datasets: [{
                data: ingresosMontos,
                backgroundColor: ['#22c55e','#2563eb','#f59e0b','#14b8a6','#a855f7','#64748b']
            }]
        },
        options: {
            responsive: false,
            maintainAspectRatio: false,
            plugins: { legend: { position: 'bottom' } }
        }
    });

    // ===== Gastos por categoría (pie) =====
    const gastosCategorias = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(
        Model.DashboardData.Categorias.GastosPorCategoria.Select(c => c.Categoria)
    ));
    const gastosMontos = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(
        Model.DashboardData.Categorias.GastosPorCategoria.Select(c => c.Monto)
    ));
    new Chart(document.getElementById('gastosPie'), {
        type: 'pie',
        data: {
            labels: gastosCategorias,
            datasets: [{
                data: gastosMontos,
                backgroundColor: ['#ef4444','#f97316','#22c55e','#06b6d4','#eab308','#8b5cf6']
            }]
        },
        options: {
            responsive: false,
            maintainAspectRatio: false,
            plugins: { legend: { position: 'bottom' } }
        }
    });
</script>


